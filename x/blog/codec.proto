syntax = "proto3";

package blog;

import "codec.proto";
import "gogoproto/gogo.proto";

// ---------- STATE -----------

message User {
  weave.Metadata metadata = 1;
  // ID is users identifier
  bytes id = 2 [(gogoproto.customname) = "ID"];
  // Username is user's alias
  string username = 3;
  // Bio is user information
  string bio = 4;
  // RegisteredAt defines registration time of the user
  int64 registered_at = 5 [(gogoproto.casttype) = "github.com/iov-one/weave.UnixTime"];
}

message Blog {
  weave.Metadata metadata = 1;
  // ID is blog's identifier
  bytes id = 2 [(gogoproto.customname) = "ID"];
  // Owner is the owner address of the blog
  bytes owner = 3 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  // Title is title of the blog
  string title = 4;
  // Description is description section of the blog
  string description = 5;
  // CreatedAt defines creation time of the blog
  int64 created_at = 6 [(gogoproto.casttype) = "github.com/iov-one/weave.UnixTime"];
}

message Article {
  weave.Metadata metadata = 1;
  // ID is article's identifier
  bytes id = 2 [(gogoproto.customname) = "ID"];
  // BlogID identifies blog that article is posted to
  bytes blog_id = 3 [(gogoproto.customname) = "BlogID"];
  // Owner is the owner address of the blog
  bytes owner = 4 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  // Title is title of the article
  string title = 5;
  // Content is content of the blog
  string content = 6;
  // CommentCount is total number of comments posted under article
  int64 comment_count = 7 [(gogoproto.customname) = "CommentCount"];
  // LikeCount is total number of likes posted under article
  int64 like_count = 8 [(gogoproto.customname) = "LikeCount"];
  // CreatedAt defines creation time of the article
  int64 created_at = 9 [(gogoproto.casttype) = "github.com/iov-one/weave.UnixTime"];
  // DeleteAt defines deletion time of the article.
  // Could be nil if there is not a time of deletion
  int64 delete_at = 10 [(gogoproto.casttype) = "github.com/iov-one/weave.UnixTime"];
}

// DeleteArticleTask is used for representing scheduled task id. Used when deleting the task
message DeleteArticleTask {
  weave.Metadata metadata = 1;
  // TaskID is the unique identifier of the task
  bytes id = 2 [(gogoproto.customname) = "ID"];
  // ArticleID is the id of the article that will be deleted
  bytes article_id = 3 [(gogoproto.customname) = "ArticleID"];
  // TaskOwner is the creator of the task
  bytes task_owner = 4 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
}

// ---------- MESSAGES -----------

message CreateUserMsg {
  weave.Metadata metadata = 1;
  // Username is user's alias
  string username = 2;
  // Bio is user information
  string bio = 3;
}

message CreateBlogMsg {
  weave.Metadata metadata = 1;
  // Title is title of the blog
  string title = 2;
  // Description is description section of the blog
  string description = 3;
}

message ChangeBlogOwnerMsg {
  weave.Metadata metadata = 1;
  // ID of the blog that is desired to change owner
  bytes blog_id = 2 [(gogoproto.customname) = "BlogID"];
  // Address of the new owner
  bytes new_owner = 3 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
}

message CreateArticleMsg {
  weave.Metadata metadata = 1;
  // BlogID identifies blog that article is posted to
  bytes blog_id = 2 [(gogoproto.customname) = "BlogID"];
  // Title is title of the article
  string title = 3;
  // Content is content of the blog
  string content = 4;
  // DeleteAt defines deletion time of the article.
  // Could be nil if there is not a time of deletion, or in future
  int64 delete_at = 5 [(gogoproto.casttype) = "github.com/iov-one/weave.UnixTime"];
}

// DeleteArticleMsg message deletes the the article instantly
message DeleteArticleMsg {
  weave.Metadata metadata = 1;
  // ArticleID is the identifier of the article that is desired to be deleted
  bytes article_id = 2 [(gogoproto.customname) = "ArticleID"];
}

// CancelDeleteArticleTaskMsg message cancelles scheduled article deletion
message CancelDeleteArticleTaskMsg {
  weave.Metadata metadata = 1;
  // TaskID is the identifier of the task
  bytes task_id = 2 [(gogoproto.customname) = "TaskID"];
}
